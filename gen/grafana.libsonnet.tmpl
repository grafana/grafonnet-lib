local crdsonnet = import 'github.com/Duologic/crdsonnet/crdsonnet/main.libsonnet';
local renderer = import 'github.com/Duologic/crdsonnet/crdsonnet/render.libsonnet';
local schemasRaw = import 'github.com/grafana/grok/jsonnet/{{GRAFANA_VERSION}}/imports.libsonnet';
local d = import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet';
local version="{{GRAFANA_VERSION}}";

local panelSharedProperties =
  std.filter(function(s) s.info.title=='dashboard', schemasRaw)[0]
  .components.schemas.Panel;

local schemas = {
  [s.info.title]:
    s
    + (if 'PanelOptions' in s.components.schemas[s.info.title].properties
       then { components+: { schemas+: {
         [s.info.title]: { '$ref': '#/components/schemas/PanelOptions' },
         PanelOptions: s.components.schemas[s.info.title].properties.PanelOptions,
       } } }
       else {})
    + (if 'PanelLayout' in s.components.schemas[s.info.title].properties
       then { components+: { schemas+: {
         PanelLayout: s.components.schemas[s.info.title].properties.PanelLayout,
       } } }
       else {})
      + {
        components+: {
          schemas+: {
            'Panel': panelSharedProperties,
            'allOf': {
              'allOf': [
                {"$ref": "#/components/schemas/Panel"},
                {"$ref": "#/components/schemas/%s" % s.info.title},
              ],
            },
          },
        },
      }
  for s in schemasRaw
};

std.foldl(
  function(acc, k)
    local schema = schemas[k];
    local component = schema.components.schemas.allOf;
    acc + {
     [k]+:{
       '#':: d.package.new(
         k,
         'github.com/grafana/grafonnet-lib',
         'grafonnet/v9.4.0/grafana.libsonnet',
         'v9.4.0',
        ),
      },
    }
    + crdsonnet.fromOpenAPI(
      k,
      component,
      schema,
      render='dynamic',
    ),
  std.objectFields(schemas),
  renderer.dynamic.nilvalue
)
+ (import 'veneer.libsonnet')
  + {
    '#':
      d.package.new(
        'grafonnet',
        'github.com/grafana/grafonnet-lib',
        'Jsonnet library for rendering Grafana resources',
        'grafonnet/v9.4.0/grafana.libsonnet',
        '9.4.0',
      ),
  }
